{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\n\n\n// Описаний у документації\nimport iziToast from \"izitoast\";\n// Додатковий імпорт стилів\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n// Описаний у документації\nimport SimpleLightbox from \"simplelightbox\";\n// Додатковий імпорт стилів\nimport \"simplelightbox/dist/simple-lightbox.min.css\";\n\n\n\nconst gallery = new SimpleLightbox('.gallery a',{\n    overlayOpacity: 8,\n    captionData: \"href\",\n    captionDelay: 250,\n    captionClass: \"text-center\"\n  });\n\n\n\n// const container = document.querySelector(\".gallery\");\n// const form = document.querySelector(\".form\");\n// const loadBtn = document.querySelector(\".load-btn\");\n// form.addEventListener(\"submit\", handleSubmit);\n// loadBtn.addEventListener(\"click\", handleLoadMore);\n// const loader = document.getElementById('loader');\n \n// let page = 1;\n// let per_page = 15;\n// loader.style.display = 'none';\n\n\n// async function handleSubmit(event) {\n//     event.preventDefault();\n//     const input = form.querySelector(\"input[type='text']\");\n//     const searchQuery = input.value;\n\n//     loader.style.display = 'inline-block';\n//     container.innerHTML = \"\";\n//     try {\n//         page = 1;\n//         const { hits, totalHits } = await searchPictures(searchQuery);\n\n//         if (hits.length === 0 || totalHits <= 0) {\n//             loader.style.display = 'none';\n//             loadBtn.style.display = 'none';\n//             const errorMsg = `<i class=\"fa-solid fa-xmark\"></i>Sorry, there are no images matching your search query. Please try again!`;\n//             showToast(errorMsg);\n\n//         } else {\n//             container.insertAdjacentHTML(\"beforeend\", createMarkup(hits));\n//             gallery.refresh();\n//             page++;\n//             if (hits.length < per_page) {\n//                 loadBtn.style.display = 'none';\n//             } else {\n//                 loadBtn.style.marginBottom = '50px';\n//                 loadBtn.style.display = 'block';\n//             }\n//         }\n//     } catch (error) {\n//         const errorMsg = `<i class=\"fa-solid fa-xmark\"></i>Sorry, there was an error processing your request. Please try again!`;\n//         showToast(errorMsg);\n//     } finally {\n//         loader.style.display = 'none';\n//         form.reset();\n//     }\n// }\n\n\n\n// async function handleLoadMore() {\n//     try {               \n//         loader.style.display = 'flex';\n//         loader.style.position = \"fixed\";\n//         loader.style.bottom = \"0\";\n//         loader.style.left = \"50%\"; \n//         loader.style.transform = \"translateX(-50%)\";\n        \n        \n//         const { hits, totalPages  } = await searchPictures(form.querySelector(\"input[type='text']\").value);\n       \n        \n//         if (page >= totalPages) {\n//             loadBtn.style.display = 'none';\n//             const  message = `<i class=\"fa-solid fa-xmark\"></i>We're sorry, but you've reached the end of search results.`;\n//             showToast(message);             \n              \n//         }\n//         else{container.insertAdjacentHTML(\"beforeend\", createMarkup(hits));\n//             gallery.refresh();       \n//              page++;\n//             }\n//         const cardHeight = document.querySelector('.list-item').getBoundingClientRect().height;\n//         window.scrollBy({ top: cardHeight * 2, behavior: 'smooth' });\n//     } catch (error) {        \n//         const errorMsg = `<i class=\"fa-solid fa-xmark\"></i>We're sorry, but you've reached the end of search results.`;\n//         showToast(errorMsg);\n//         loadBtn.style.display = 'none';\n\n//     } finally {\n//         loader.style.display = 'none';    \n//      }\n// }\n\n\n\n// const  API_KEY = \"43197174-dcc5f5044572d8f441379a766\";\n\n// async function searchPictures(searchQuery){\n//     const params = new URLSearchParams({\n//         key: API_KEY,\n//         q: searchQuery,\n//         image_type: \"photo\",\n//         orientation: \"horizontal\",\n//         safesearch: true,\n//         per_page: per_page,\n//         page: page\n//     });\n    \n//     const response = await axios.get(`https://pixabay.com/api/?${params}`);\n// console.log(response);\n//     const { hits, totalHits } = response.data; \n//     const totalPages = Math.ceil(totalHits / per_page);    \n//     page = 1;\n//     return { hits, totalHits, totalPages };\n    \n// }\n\n\n// function createMarkup(arr) {\n//     return  arr.map(({webformatURL, largeImageURL, tags, likes, views, comments, downloads}) =>{\n//         return `   \n//         <li class=\"list-item\">\n//         <a class=\"gallery-link\" href=\"${largeImageURL}\">\n//             <img  class=\"list-image\" src=\"${webformatURL}\" alt=\"${tags}\">\n//             <div class=\"image-details\">          \n//                 <p class=\"likes\"><span class=\"span\">Likes:</span><br> <span class=\"span-link\">${likes}</span> </p>\n//                 <p class=\"views\"><span class=\"span\">Views:</span><br> <span class=\"span-link\">${views}</span>  </p>                                \n//                 <p class=\"comments\"><span class=\"span\">Comments:</span><br> <span class=\"span-link\">${comments}</span></p>               \n//                 <p class=\"downloads\"><span class=\"span\">Downloads:</span><br> <span class=\"span-link\">${downloads}</span></p>                           \n//             </div>\n//         </li>`; })\n//     .join(\"\")\n//     ;\n// }\n\n\n// let toastBox = document.getElementById(`toastBox`);\n// function showToast(message) {\n//     let toast = document.createElement(`div`);\n//     toast.classList.add(`toast`);   \n//     toast.innerHTML = message;\n\n//     toastBox.appendChild(toast);\n\n    \n//     setTimeout(() => {\n//         toast.remove();\n//     }, 3000);\n    \n// };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["SimpleLightbox"],"mappings":"svBAgBgB,IAAIA,EAAe,aAAa,CAC5C,eAAgB,EAChB,YAAa,OACb,aAAc,IACd,aAAc,aAClB,CAAG"}